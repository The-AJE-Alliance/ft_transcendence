upstream auth {
    server auth:8000;
}

upstream pong {
    server pong:8000;
}

server {
    listen 80;
    server_name ${NGINX_HOST};

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name ${NGINX_HOST};

    ssl_certificate /etc/ssl/${NGINX_HOST}.crt;
    ssl_certificate_key /etc/ssl/${NGINX_HOST}.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";

    root /usr/share/nginx/html;

    location / {
        index unresolvable-file.html;
        try_files $uri @index;
    }

    location @index {
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    location /static/ {
        alias /static/;
        expires 30d;
        access_log off;
    }

    location /media/ {
        alias /media/;
        expires 30d;
        access_log off;
    }

    location /api/auth/ {
        proxy_pass https://auth/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

    }

    location /api/pong/ {
        proxy_pass https://pong/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

    }
}